@256
D=A
@0
M=D
@300
D=A
@1
M=D
@400
D=A
@2
M=D
// push CONSTANT 3030
@3030
D=A
@0
A=M
M=D
@0
M=M+1
// pop pointer 0
@0
M=M-1
@0
A=M
D=M
@3
M=D
// push CONSTANT 3040
@3040
D=A
@0
A=M
M=D
@0
M=M+1
// pop pointer 1
@0
M=M-1
@0
A=M
D=M
@4
M=D
// push CONSTANT 32
@32
D=A
@0
A=M
M=D
@0
M=M+1
// pop this 2
@0
M=M-1
@3
A=M
D=A
@2
D=D+A
@0
A=M
D=D+M
A=D-M
D=D-A
M=D
// push CONSTANT 46
@46
D=A
@0
A=M
M=D
@0
M=M+1
// pop that 6
@0
M=M-1
@4
A=M
D=A
@6
D=D+A
@0
A=M
D=D+M
A=D-M
D=D-A
M=D
// push POINTER 0
@3
A=M
D=A
@0
A=M
M=D
@0
M=M+1
// push POINTER 1
@4
A=M
D=A
@0
A=M
M=D
@0
M=M+1
// add
@RETURN_ADD_10
D=A
@R13
M=D
@ADD
D=A
0;JMP
(RETURN_ADD_10)
@0
M=M+1
// push THIS 2
@3
A=M
D=A
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@0
A=M
M=D
@0
M=M+1
// sub
@0
M=M-1
@0
M=M-1
@0
A=M
D=M
@0
M=M+1
@0
A=M
D=D-M
@0
M=M-1
@0
A=M
M=D
@0
M=M+1
// push THAT 6
@4
A=M
D=A
@6
D=D+A
@R13
M=D
@R13
A=M
D=M
@0
A=M
M=D
@0
M=M+1
// add
@RETURN_ADD_12
D=A
@R13
M=D
@ADD
D=A
0;JMP
(RETURN_ADD_12)
@0
M=M+1
(ADD)
@0
M=M-1
@0
M=M-1
@0
A=M
D=M
@0
M=M+1
@0
A=M
D=D+M
@0
M=M-1
@0
A=M
M=D
@R13
A=M
D=M
0;JMP